const post_3 = {
    id: "post3",
    title: "팀 프로젝트를 진행하며 ( TODO Hunter 프로젝트)",
    date: "2025/03/19",
    tags: ["프로젝트 회고", "팀워크", "협업", "성장", "TODO Hunter"],
    content: `
팀 프로젝트를 하기 전에는 혼자서 개발하는 것에 익숙했습니다.
어찌보면 당연합니다.
혼자서 개발하는 것이 더 편하고, 내가 원하는 대로 할 수 있기 때문입니다.
</n>
"그럼에도 불구하고" (항상 되뇌이는 말입니다)
</n>
팀 프로젝트는 프론트엔드에서 필수불가결한 요소입니다.
팀 프로젝트를 통해서만 얻을 수 있는 경험과 지식이 있기 때문입니다.
</n>
최근 팀 프로젝트인 'TODO Hunter'를 진행하면서 느낀 점입니다.
## 소통
TODO Hunter 프로젝트는 4명의 프론트엔드 개발자들과 함께 진행했습니다.
다 같이 모여 몇 가지 약속을 정했습니다.
- 소통이라는 명목하에 필요없는 회의는 하지 말자.
- code review는 서로 적극적으로 참여하자.
- 어떠한 의견이 있으면 바로바로 말하는 습관을 들이자.

이런 몇가지 약속이였습니다.
소통을 하다보면 서로 마음이 상할때도, 오해가 쌓일 때도 있습니다.

### 소통 속 오해들.
- 피드백이 누군가에게 일을 더 준다는 것처럼 보일 수 있습니다.
- 서로의 피드백을 하나 하나 반영하다보면, 내가 생각했던 방향과 다르게 흘러갈 수 있습니다.

...(그 외에 매우 다양하지만 내가 생각한 대표적인 오해들입니다)
결국 서로 피드백을 주고 받는 과정에서 오해가 생기고, 그 오해가 쌓이다보면 서로의 마음이 상할 수 있습니다.
저 또한 그런 오해를 겪었습니다.

### 이런 오해들은 소통을 통해서 풀 수 있었습니다.
- 피드백을 줄 때 
    - “내 의견이 무조건 맞다”는 식이 아니라, 왜 필요한지 배경을 함께 설명하려고 했습니다.
    - 피드백을 주는 상황에서도 “내가 틀렸다”는 것을 인정하려고 했습니다.
    - 팀원 간의 상황을 고려하여 피드백을 주려고 했습니다. (어려운 기능을 담당하는 팀원에게는 시간적 여유를 주고 피드백을 주는 등)

- 피드백을 받을 때
    - 피드백을 받을 때 “내가 틀렸다는 것”이 아니라, “더 나은 방향으로 가기 위한 피드백”이라는 것을 인지하려고 했습니다.
    - 내가 원하는 방향과 다르게 흘러갈 때도, “이 선택이 전체 프로젝트에 어떤 이득을 줄까?”라는 관점에서 다시 바라보려 했습니다.

### 일 === 나  라는 생각을 내려놓기로 했습니다.
일에 대한 피드백이 나에 대한 피드백이 아니라, 프로젝트를 더 나은 방향으로 이끌기 위한 피드백이라는 것을 인지하려고 했습니다.

### 팀 === 나의 일부
이번 TODO Hunter 프로젝트를 하면서 가장 크게 느낀 건 팀 속에서의 내 역할이었습니다.
혼자 개발할 때는 내가 편하면 됐고, 내가 만족하면 끝이었지만, 팀 프로젝트에서는 작은 코드 하나도 전체 결과물에 영향을 준다는 걸 알게 되었습니다.
내가 맡은 부분이 곧 팀의 일부라는 게 신기하면서도 책임감 있게 다가왔습니다.

### 함께 하는 경험
또 하나는 사람과 함께 일한다는 경험이었습니다.
결국 프로젝트가 끝나고 남는 건 결과물뿐만 아니라 그 과정을 함께한 팀원들과의 경험이더군요.
피드백을 주고받으면서 때로는 마음이 불편할 때도 있었지만, “이게 팀 전체에 어떤 도움이 될까?”라는 생각을 하면서 점점 더 소통하는 방법을 배우게 됐습니다.
혼자였다면 절대 얻지 못했을 경험이었습니다.

### 그럼에도 불구하고
그럼에도 불구하고, 팀 프로젝트는 쉽지 않습니다.
소통에는 언제나 오해가 따르고, 협업에는 불편함이 따라옵니다.
하지만 그 불편함 속에서 성장할 수 있었고, 그 경험이 결국 저를 더 좋은 개발자로 만들어주고 있다는 걸 느꼈습니다.

### 앞으로
그래서 앞으로는 단순히 “코드를 잘 짜는 개발자”가 아니라, “같이 일하고 싶은 개발자”가 되고 싶습니다.
팀 프로젝트의 진짜 가치는 코드보다도, 협업을 통해 배우고 성장하는 데 있다는 걸 알았습니다.
이번 경험을 밑바탕으로, 다음 프로젝트에서는 더 유연하게, 그리고 즐겁게 팀에 기여하는 개발자가 되려 합니다.

`
}

export default post_3;